name: SuperClaude Unified Handler

# Prevent duplicate workflow runs with strict concurrency
concurrency:
  group: superclaude-${{ github.event.issue.number || github.event.comment.id || github.event.number }}
  cancel-in-progress: true

on:
  issues:
    types: [labeled]
  issue_comment:
    types: [created]

jobs:
  superclaude-handler:
    # Strict conditions to prevent duplicates - only one trigger path
    if: |
      (github.event_name == 'issues' &&
       github.event.action == 'labeled' &&
       contains(github.event.issue.labels.*.name, 'claude-fix') &&
       github.actor != 'claude[bot]') ||
      (github.event_name == 'issue_comment' &&
       github.event.action == 'created' &&
       contains(github.event.comment.body, '@claude') &&
       github.actor != 'claude[bot]' &&
       !github.event.issue.pull_request)

    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run SuperClaude Framework
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          base_branch: main
          branch_prefix: superclaude/
          track_progress: true
          settings: |
            {
              "workingDirectory": ".",
              "environmentVariables": {
                "NODE_ENV": "development"
              }
            }
          prompt: |
            ðŸš¨ **MANDATORY: CREATE PULL REQUEST WITH CODE IMPLEMENTATION** ðŸš¨

            **CRITICAL SUCCESS CRITERIA**: This task is ONLY successful if a Pull Request is created.

            **STEP-BY-STEP MANDATORY WORKFLOW**:

            **Phase 1: Create Branch**
            1. Run: `git status` (check current state)
            2. Run: `git checkout -b superclaude/issue-${{ github.event.issue.number }}`
            3. Verify branch created: `git branch`

            **Phase 2: Implement Code**
            4. Add leaderboard HTML section to index.html (after existing game elements)
            5. Add leaderboard CSS styling (dark gaming theme, glassmorphism)
            6. Add leaderboard JavaScript functions to game.js
            7. Verify integration with existing scoring system

            **Phase 3: Commit & Push** (MOST CRITICAL - DO NOT SKIP)
            8. Run: `git add .` (stage all changes)
            9. Run: `git status` (verify files staged)
            10. Run: `git commit -m "feat: add gaming leaderboard UI component"`
            11. Run: `git push origin superclaude/issue-${{ github.event.issue.number }}`

            **Phase 4: Create PR** (FINAL REQUIREMENT)
            12. Use GitHub API or gh CLI to create PR
            13. Link PR to issue #${{ github.event.issue.number }}
            14. Verify PR was created successfully

            **LEADERBOARD REQUIREMENTS**:
            - Dark gaming theme matching existing design
            - Top 5 player rankings with scores
            - Responsive glassmorphism styling
            - Real-time score updates from game.js

            **INTEGRATION**: Add leaderboard div after game canvas, connect to existing score variable.

            **FAILURE = NO PR CREATED. SUCCESS = WORKING PR WITH CODE.**

            Execute every step above. DO NOT STOP until Pull Request exists.

          claude_args: '--allowed-tools "*,Bash(git checkout:*),Bash(git branch:*),Bash(gh:*)" --max-turns 20'