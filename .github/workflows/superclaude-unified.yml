name: SuperClaude Unified Handler

on:
  issues:
    types: [opened, labeled]
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  pull_request_review:
    types: [submitted]

jobs:
  superclaude-handler:
    # Clear conditions to avoid conflicts
    if: |
      (github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'claude-fix')) ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude'))

    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run SuperClaude Framework
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          base_branch: main
          branch_prefix: superclaude/
          track_progress: true
          settings: |
            {
              "workingDirectory": ".",
              "environmentVariables": {
                "NODE_ENV": "development"
              }
            }
          prompt: |
            ðŸš¨ **URGENT: DO NOT JUST ANALYZE - IMPLEMENT CODE** ðŸš¨

            **YOU MUST CREATE ACTUAL CODE FILES, BRANCHES, AND PULL REQUESTS**

            This issue requires IMPLEMENTATION, not just analysis or comments.

            **MANDATORY ACTIONS** (failure to complete all means task failure):
            1. âœ… `git checkout -b superclaude/issue-${{ github.event.issue.number }}`
            2. âœ… Write actual code files (HTML/CSS/JS)
            3. âœ… `git add` and `git commit` changes
            4. âœ… `git push origin superclaude/issue-${{ github.event.issue.number }}`
            5. âœ… Create PR using GitHub API

            **Task**: Implement gaming leaderboard UI component based on:
            https://www.figma.com/community/file/1189534749500925267/leaderboard

            **Requirements**:
            - Modern dark gaming theme
            - Player rankings with scores
            - Responsive design
            - Integration with existing game.js scoring system

            **Integration Points**:
            - Add to existing index.html layout
            - Extend game.js scoring functionality
            - Match current glassmorphism design

            **Expected Deliverable**: Working PR with actual implementation, NOT analysis comments.

            Use Bash tool for git operations, Write/Edit tools for code, ensure all files are committed and pushed.

          claude_args: '--allowed-tools "*" --max-turns 15'